Let k be the number of clusters to partition the data set
Let X = {x_{1},x_{2}, ..., x_{n}} be the data set to be analyzed
Let M = {m_{1}, m_{2}, ..., m_{k}} be the code-book associated to the clusters
Let dist(a, b) be the desired distance metric
Let B = {B_{11}, B_{12}, ..., B_{nk}} be the temporary pertenece bit matrix

Ensure: C = {C_{1}, C_{2}, ..., C_{k}} set of clusterized instances

Begin:

	//randomly initialize the first centroids
	for each m_{j}
		m_{j} = randomsample(X)
	end
	
	//assign dataset instances to each cluster generated by the centroids
	for each x_{n}
		B_{nj} = 1 sii argmin dist (xn,mj) = mj \foreach m_{j} si no B_{nj} = 0 
	end
		
	for each B_{nj}
		if B_{nj} == 1
			C_{j}.add(x_{i}) 
		end
	end
	
	//iterate the algorithm generatin new centroids based on previously clusterized instances until there are no changes between iterations
	while changes in M do
		for each m_{j}
			m_{j}new = calculatecentroid(C_{j})
			if m_{j}new == m_{j}
				changes = false
			else
				changes = true
			end
			m_{j} = m_{j}new	
		end
		
		for each x_{n}
			B_{nj} = 1 sii argmin dist (xn,mj) = mj \foreach m_{j} si no B_{nj} = 0 
		end
		
		for each B_{nj}
			if B_{nj} == 1
				C_{j}.add(x_{i}) 
			end
		end
	end
	
	return C = {C_{1}, C_{2}, ..., C_{k}}
end
\end{lstlisting}